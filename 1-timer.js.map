{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\nlet intervalId;\nconst dataPicker = document.querySelector(\"#datetime-picker\");\nconst btn = document.querySelector(\"button[data-start]\");\nbtn.disabled = true;\nconst dataDays = document.querySelector(\"[data-days\");\nconst dataHours = document.querySelector(\"[data-hours\");\nconst dataMinutes = document.querySelector(\"[data-minutes\");\nconst dataSecondss = document.querySelector(\"[data-seconds\");\n\nbtn.addEventListener(\"click\", startTimer);\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n        backgroundColor: \"#EF4040\",\n        titleColor: \"#FFFFFF\",\n        messageColor: \"#FFFFFF\",\n        iconUrl: \"../img/octagon.svg\",\n        iconColor: \"#FFFFFF\",\n      });\n      btn.disabled = true;\n    } else {\n      btn.disabled = false;\n      userSelectedDate = selectedDates[0].getTime();\n    }\n  },\n});\n\nfunction startTimer() {\n  btn.disabled = true;\n  dataPicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const timeLeft = userSelectedDate - Date.now();\n\n    if (timeLeft <= 0) {\n      clearInterval(intervalId);\n      dataPicker.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    dataDays.textContent = String(days).padStart(2, \"0\");\n    dataHours.textContent = String(hours).padStart(2, \"0\");\n    dataMinutes.textContent = String(minutes).padStart(2, \"0\");\n    dataSecondss.textContent = String(seconds).padStart(2, \"0\");\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","intervalId","dataPicker","btn","dataDays","dataHours","dataMinutes","dataSecondss","startTimer","flatpickr","selectedDates","iziToast","timeLeft","days","hours","minutes","seconds","convertMs","ms"],"mappings":"+IAKA,IAAIA,EACAC,EACJ,MAAMC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAM,SAAS,cAAc,oBAAoB,EACvDA,EAAI,SAAW,GACf,MAAMC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAe,SAAS,cAAc,eAAe,EAE3DJ,EAAI,iBAAiB,QAASK,CAAU,EAExCC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,WAAY,UACZ,aAAc,UACd,QAAS,qBACT,UAAW,SACnB,CAAO,EACDR,EAAI,SAAW,KAEfA,EAAI,SAAW,GACfH,EAAmBU,EAAc,CAAC,EAAE,QAAO,EAE9C,CACH,CAAC,EAED,SAASF,GAAa,CACpBL,EAAI,SAAW,GACfD,EAAW,SAAW,GAEtBD,EAAa,YAAY,IAAM,CAC7B,MAAMW,EAAWZ,EAAmB,KAAK,IAAG,EAE5C,GAAIY,GAAY,EAAG,CACjB,cAAcX,CAAU,EACxBC,EAAW,SAAW,GACtB,MACD,CAED,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAC5DR,EAAS,YAAc,OAAOS,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDR,EAAU,YAAc,OAAOS,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDR,EAAY,YAAc,OAAOS,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDR,EAAa,YAAc,OAAOS,CAAO,EAAE,SAAS,EAAG,GAAG,CAC3D,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}